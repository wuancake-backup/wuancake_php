PSR标准

PSR-1:
	1. 概览

	•PHP代码文件必须以 <?php 或 <?= 标签开始；


	•PHP代码文件必须以 不带BOM的 UTF-8 编码；


	•PHP代码中应该只定义类、函数、常量等声明，或其他会产生 从属效应 的操作（如：生成文件输出以及修改.ini配置文件等），二者只能选其一；


	•命名空间以及类必须符合 PSR 的自动加载规范：PSR-0 或 PSR-4 中的一个；


	•类的命名必须遵循 StudlyCaps 大写开头的驼峰命名规范；


	•类中的常量所有字母都必须大写，单词间用下划线分隔；


	•方法名称必须符合 camelCase 式的小写开头驼峰命名规范。


	2. 文件

	2.1. PHP标签

	PHP代码必须使用 <?php ?> 长标签 或 <?= ?> 短输出标签； 一定不可使用其它自定义标签。

	2.2. 字符编码

	PHP代码必须且只可使用不带BOM的UTF-8编码。

	2.3. 从属效应（副作用）

	一份PHP文件中应该要不就只定义新的声明，如类、函数或常量等不产生从属效应的操作，要不就只有会产生从属效应的逻辑操作，但不该同时具有两者。

	“从属效应”(side effects)一词的意思是，仅仅通过包含文件，不直接声明类、 函数和常量等，而执行的逻辑操作。

	“从属效应”包含却不仅限于：生成输出、直接的 require 或 include、连接外部服务、修改 ini 配置、抛出错误或异常、修改全局或静态变量、读或写文件等。
	

	3. 命名空间和类

	命名空间以及类的命名必须遵循 PSR-0.

	根据规范，每个类都独立为一个文件，且命名空间至少有一个层次：顶级的组织名称（vendor name）。

	类的命名必须 遵循 StudlyCaps 大写开头的驼峰命名规范。

	PHP 5.3及以后版本的代码必须使用正式的命名空间。


	4. 类的常量、属性和方法

	此处的“类”指代所有的类、接口以及可复用代码块（traits）

	4.1. 常量

	类的常量中所有字母都必须大写，词间以下划线分隔。 

	4.2. 属性

	类的属性命名可以遵循 大写开头的驼峰式 ($StudlyCaps)、小写开头的驼峰式 ($camelCase) 又或者是 下划线分隔式 ($under_score)，本规范不做强制要求，但无论遵循哪种命名方式，都应该在一定的范围内保持一致。这个范围可以是整个团队、整个包、整个类或整个方法。

	4.3. 方法

	方法名称必须符合 camelCase() 式的小写开头驼峰命名规范。



PSR-2:
	1. 概览

	•代码必须遵循 PSR-1 中的编码规范 。


	•代码必须使用4个空格符而不是 tab键 进行缩进。


	•每行的字符数应该软性保持在80个之内， 理论上一定不可多于120个， 但一定不能有硬性限制。


	•每个 namespace 命名空间声明语句和 use 声明语句块后面，必须插入一个空白行。


	•类的开始花括号({)必须写在函数声明后自成一行，结束花括号(})也必须写在函数主体后自成一行。


	•方法的开始花括号({)必须写在函数声明后自成一行，结束花括号(})也必须写在函数主体后自成一行。


	•类的属性和方法必须添加访问修饰符（private、protected 以及 public）， abstract 以及 final必须声明在访问修饰符之前，而 static必须声明在访问修饰符之后。


	•控制结构的关键字后必须要有一个空格符，而调用方法或函数时则一定不能有。


	•控制结构的开始花括号({)必须写在声明的同一行，而结束花括号(})必须写在主体后自成一行。


	•控制结构的开始左括号后和结束右括号前，都一定不能有空格符。


	2. 通则

	2.1 基本编码准则

	代码必须符合 PSR-1 中的所有规范。

	2.2 文件

	所有PHP文件必须使用Unix LF (linefeed)作为行的结束符。

	所有PHP文件必须以一个空白行作为结束。

	纯PHP代码文件必须省略最后的 ?> 结束标签。

	2.3. 行

	行的长度一定不能有硬性的约束。

	软性的长度约束一定要限制在120个字符以内，若超过此长度，带代码规范检查的编辑器一定要发出警告，不过一定不可发出错误提示。

	每行不应该多于80个字符，大于80字符的行应该折成多行。

	非空行后一定不能有多余的空格符。

	空行可以使得阅读代码更加方便以及有助于代码的分块。

	每行一定不能存在多于一条语句。

	2.4. 缩进

	代码必须使用4个空格符的缩进，一定不能用 tab键 。

	2.5. 关键字 以及 True/False/Null

	PHP所有 关键字必须全部小写。

	常量 true 、false 和 null 也必须全部小写。

	4. 类、属性和方法

	此处的“类”泛指所有的class类、接口以及traits可复用代码块。

	4.1. 扩展与继承

	关键词 extends 和 implements必须写在类名称的同一行。

	类的开始花括号必须独占一行，结束花括号也必须在类主体后独占一行。

	implements 的继承列表也可以分成多行，这样的话，每个继承接口名称都必须分开独立成行，包括第一个。

	4.2. 属性

	每个属性都必须添加访问修饰符。

	一定不可使用关键字 var 声明一个属性。

	每条语句一定不可定义超过一个属性。

	不要使用下划线作为前缀，来区分属性是 protected 或 private。

	以下是属性声明的一个范例：

	4.3. 方法

	所有方法都必须添加访问修饰符。

	不要使用下划线作为前缀，来区分方法是 protected 或 private。

	方法名称后一定不能有空格符，其开始花括号必须独占一行，结束花括号也必须在方法主体后单独成一行。参数左括号后和右括号前一定不能有空格。

	一个标准的方法声明可参照以下范例，留意其括号、逗号、空格以及花括号的位置。

	4.4. 方法的参数

	参数列表中，每个参数后面必须要有一个空格，而前面一定不能有空格。

	有默认值的参数，必须放到参数列表的末尾。

	参数列表可以分列成多行，这样，包括第一个参数在内的每个参数都必须单独成行。

	拆分成多行的参数列表后，结束括号以及方法开始花括号 必须 写在同一行，中间用一个空格分隔。

	4.5. abstract 、 final 、 以及 static

	需要添加 abstract 或 final 声明时， 必须写在访问修饰符前，而 static 则必须写在其后。

	4.6. 方法及函数调用

	方法及函数调用时，方法名或函数名与参数左括号之间一定不能有空格，参数右括号前也 一定不能有空格。每个参数前一定不能有空格，但其后必须有一个空格。

	参数可以分列成多行，此时包括第一个参数在内的每个参数都必须单独成行。

	5. 控制结构

	控制结构的基本规范如下：
	•控制结构关键词后必须有一个空格。
	•左括号 ( 后一定不能有空格。
	•右括号 ) 前也一定不能有空格。
	•右括号 ) 与开始花括号 { 间一定有一个空格。
	•结构体主体一定要有一次缩进。
	•结束花括号 }一定在结构体主体后单独成行。

	每个结构体的主体都必须被包含在成对的花括号之中， 这能让结构体更加结构话，以及减少加入新行时，出错的可能性。
	
	6. 闭包

	闭包声明时，关键词 function 后以及关键词 use 的前后都必须要有一个空格。

	开始花括号必须写在声明的同一行，结束花括号必须紧跟主体结束的下一行。

	参数列表和变量列表的左括号后以及右括号前，必须不能有空格。

	参数和变量列表中，逗号前必须不能有空格，而逗号后必须要有空格。

	闭包中有默认值的参数必须放到列表的后面。

	参数列表以及变量列表可以分成多行，这样，包括第一个在内的每个参数或变量都必须单独成行，而列表的右括号与闭包的开始花括号必须放在同一行。

	注意，闭包被直接用作函数或方法调用的参数时，以上规则仍然适用。

PSR-3:

PSR-4:

