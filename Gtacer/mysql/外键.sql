外键(FOREIGN KEY):	--外面的键（键不再自己表中）:如果一张表中有一个字段（非主键）指向另外一张表的主键，那么该字段称之为外键。

	增加外键	--外键可以在创建表的时候或者创建表之后增加(但是要考虑数据的问题)
			--一张表可以有多个外键

		创建表的时候增加外键:
			在所有的表字段之后，使用FOREIGN KEY(外键字段) REFERENCES 外部表(主键字段);

		在新增表之后增加外键：	--修改表结构
			ALTER TABLE 表名 ADD[CONSTRAINT 外键名字] FOREIGN KEY(外键字段) REFERENCES 父表(主键字段);


	修改&删除外键	--外键不可修改，只可先删除后增加
		
		删除外键：
			ALTER TABLE 表名 DROP FOREIGN KEY 外键名;	--一张表中可以有多个外键但是名字不能相同



	外键的作用
		对子表约束：
			子表数据进行写操作(增和改)的时候,如果对应的外键字段在父表找不到对应的匹配,
			那么操作会失败(约束子表数据操作)；

		对父表约束:
			父表数据进行写操作(删和该:都必须设计到主键本身),如果对应的主键在子表中已经被数据
			所引用，那么就不允许操作.

	
	外键条件
		
		1,外键要存在：首先必须保证表的储存引擎是INNODB，
		如果不是INNODB储存引擎，那么外键可以创建成功，但是没有约束效果

		2,外键字段的字段类型(列类型)必须与主表的逐渐类型完全一致。

		3,一张表中的外键名字不能重复

	

	外键约束
		DISTRICT:严格模式(默认),父表不能删除或者更新一个已经被子表数据引用的记录
		CASCADE:级联模式，父表的操作，对应子表关联的数据也跟着被操作
		SET NULL:置空模式，父表的操作之后，子表对应的数据(外键字段)被置空

		--通常的一个合理的做法是：删除的时候子表置空，更新的时候子表联级操作

		FOREIGN KEY(外键字段) REFERENCES 父表(主键字段)	ON DELETE 模式 ON UPDATE 模式;